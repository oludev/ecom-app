{{> adminHeader}}

<div class="container mt-4">
  <h2>Notifications</h2>
<div class="text-right mb-3">
  <button class="btn btn-danger btn-sm" id="clearAdminNotifsBtn" onclick="clearAdminNotifications()">
    <i class="bi bi-trash3"></i> Clear All Notifications
  </button>
</div>

  {{#if notifications.length}}
    <ul class="list-group mt-3">
      {{#each notifications}}
        <li class="list-group-item d-flex justify-content-between align-items-center">
          <div>
            <strong>{{title}}</strong><br>
            <small>{{message}}</small><br>
            <small class="text-muted">{{created_at}}</small> {{!-- You might want to format this date in a more user-friendly way, either server-side or with client-side JS --}}
          </div>
          {{#unless is_read}}
            <span class="badge bg-warning text-dark">Unread</span>
          {{/unless}}
        </li>
      {{/each}}
    </ul>
  {{else}}
    <p class="mt-3">No notifications found.</p>
  {{/if}}

  <a href="/admin/dashboard" class="btn btn-light border border-secondary mt-4">Back to Dashboard</a>
</div>


<script src="/socket.io/socket.io.js"></script>
<script>
  const socket = io();

  const notificationBadge = document.querySelector('.navbar-nav .nav-item .badge');

  socket.on('notification_admin', function(data) {
    console.log("Admin notification count received:", data.unreadCount);

    // Update the notification badge dynamically
    if (notificationBadge) {
      if (data.unreadCount > 0) {
        notificationBadge.textContent = data.unreadCount;
        notificationBadge.style.display = 'inline-block'; // Ensure the badge is visible
      } else {
        notificationBadge.textContent = ''; // Clear text if no unread notifications
        notificationBadge.style.display = 'none'; // Hide the badge if no unread notifications
      }
    }
  });
</script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
function clearAdminNotifications() {
  Swal.fire({
    title: 'Are you sure?',
    text: 'This will delete all notifications permanently!',
    icon: 'warning',
    showCancelButton: true,
    confirmButtonColor: '#d33',
    cancelButtonColor: '#aaa',
    confirmButtonText: 'Yes, delete all',
    cancelButtonText: 'Cancel'
  }).then((result) => {
    if (result.isConfirmed) {
      axios.post('/admin/api/notifications/clear')
        .then(res => {
          if (res.data.success) {
            Swal.fire({
              icon: 'success',
              title: 'Cleared!',
              text: 'All notifications cleared successfully!',
              confirmButtonColor: '#28a745'
            }).then(() => location.reload());
          } else {
            Swal.fire('Error', 'Failed to clear notifications.', 'error');
          }
        })
        .catch(err => {
          console.error('Clear Notifications Error:', err);
          Swal.fire('Oops!', 'An error occurred while clearing notifications.', 'error');
        });
    }
  });
}
</script>
{{> adminFooter}}
